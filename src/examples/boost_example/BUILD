cc_binary(
    name = "boost_example",
    srcs = ["main.cpp"],
    target_compatible_with = [
        "@platforms//os:macos",
    ],
    deps = [
        "@boost//:align",
        "@boost//:any",
        "@boost//:array",
        "@boost//:assert",
        "@boost//:assign",
        "@boost//:beast",
        "@boost//:bimap",
        "@boost//:bind",
        "@boost//:date_time",
        "@boost//:detail",
        "@boost//:dll",
        "@boost//:endian",
        "@boost//:fiber",
        "@boost//:filesystem",
        "@boost//:format",
        "@boost//:fusion",
        "@boost//:geometry",
        "@boost//:get_pointer",
        "@boost//:gil",
        "@boost//:integer",
        "@boost//:intrusive",
        "@boost//:intrusive_ptr",
        "@boost//:io",
        "@boost//:iostreams",
        "@boost//:iterator",
        "@boost//:lambda",
        "@boost//:lambda2",
        "@boost//:leaf",
        "@boost//:limits",
        "@boost//:log",
        "@boost//:mem_fn",
        "@boost//:move",
        "@boost//:mp11",
        "@boost//:mpl",
        "@boost//:msm",
        "@boost//:multi_array",
        "@boost//:multi_index",
        "@boost//:none",
        "@boost//:nowide",
        "@boost//:operators",
        "@boost//:optional",
        "@boost//:parameter",
        "@boost//:pfr",
        "@boost//:polygon",
        "@boost//:pool",
        "@boost//:predef",
        "@boost//:program_options",
        "@boost//:property_map",
        "@boost//:property_tree",
        "@boost//:proto",
        "@boost//:qvm",
        "@boost//:random",
        "@boost//:range",
        "@boost//:ratio",
        "@boost//:rational",
        "@boost//:ref",
        "@boost//:regex",
        "@boost//:serialization",
        "@boost//:signals2",
        "@boost//:smart_ptr",
        "@boost//:spirit",
        "@boost//:swap",
        "@boost//:system",
        "@boost//:test",
        "@boost//:test.a",
        "@boost//:timer",
        "@boost//:tokenizer",
        "@boost//:tribool",
        "@boost//:tti",
        "@boost//:tuple",
        "@boost//:type",
        "@boost//:type_erasure",
        "@boost//:type_index",
        "@boost//:type_traits",
        "@boost//:typeof",
        "@boost//:units",
        "@boost//:unordered",
        "@boost//:url",
        "@boost//:utility",
        "@boost//:uuid",
        "@boost//:variant",
        "@boost//:variant2",
        "@boost//:version",
        "@boost//:vmd",
        "@boost//:xpressive",
    ],
    #    @boost//:multiprecision is enough
)
