load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@hedron_compile_commands//:workspace_setup.bzl", "hedron_compile_commands_setup")
load("@rules_foreign_cc//foreign_cc:repositories.bzl", "rules_foreign_cc_dependencies")
load("//third_party/opencv:workspace.bzl", "opencv")
load("//third_party/rules_cuda:workspace.bzl", "rules_cuda")
load("//third_party/rules_boost:workspace.bzl", "boost_deps")
load("//third_party/eigen:workspace.bzl", "eigen")
load("//third_party/fmt:workspace.bzl", "fmt")
load("//third_party/glfw:workspace.bzl", "glfw")
load("//third_party/open3d:workspace.bzl", "open3d")
load("//third_party/open3d_macos:workspace.bzl", "open3d_macos")
load("//third_party/rules_pcl:workspace.bzl", "rules_pcl")
load("//third_party/glew:workspace.bzl", "glew")
load("//third_party/rules_7zip:workspace.bzl", "rules_7zip")
load("//third_party/glm:workspace.bzl", "glm")
load("//third_party/rules_vulkan:workspace.bzl", "com_github_zaucy_rules_vulkan")

def third_party_repositories():
    hedron_compile_commands_setup()
    rules_foreign_cc_dependencies()
    opencv()
    rules_cuda()
    boost_deps()
    eigen()
    glfw()
    glew()
    fmt()
    open3d()
    open3d_macos()
    rules_7zip()
    glm()
    com_github_zaucy_rules_vulkan()
    rules_pcl()
